<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2020</x>
      <y>70</y>
      <w>600</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>/drawable/
--
#_world: world
--
/+draw()/
/+update()/
+setWorld(world: world)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2020</x>
      <y>300</y>
      <w>600</w>
      <h>370</h>
    </coordinates>
    <panel_attributes>/pendulum/
--
#_length: double[]
#_mass: double[]
#_theta: double[]
#_omega: double[]
#_alpha: double[]
#_x: double[]
#_y: double[]
#_gravity: double
#_friction: double
#_mountpoint_width : double
#_mountpoint_height : double
#_mass_radius: double[]
#_method: num_method
#_objectorigin: (int, int)
--
+__init__(length: double[], mass: double[], theta: double[], omega: double[])
+setNumMethod(num_method: method)
+update(dt: double)
+force(fx: double, fy: double, node: int)
+getPos(): (int[], int[])
+getRadius(): double[]
/+eom()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1310</x>
      <y>910</y>
      <w>600</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/pendulum1M/
--

--
+eom(): double
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1570</x>
      <y>660</y>
      <w>630</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>610.0;10.0;610.0;80.0;10.0;90.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2310</x>
      <y>170</y>
      <w>30</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2030</x>
      <y>910</y>
      <w>590</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/pendulum2M/
--

--
+eom(): double[2]
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2750</x>
      <y>910</y>
      <w>590</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>/pendulum3M/
--

--
+eom(): double[3]
+draw()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2310</x>
      <y>660</y>
      <w>30</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2450</x>
      <y>660</y>
      <w>610</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;590.0;70.0;590.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>590</x>
      <y>260</y>
      <w>620</w>
      <h>800</h>
    </coordinates>
    <panel_attributes>world
--
#__init__()
#_object_stack: drawable[]
#_background_color: (int, int, int)
#_screen: pygame.Surface
#_width: int
#_height: int
#_lmargin: int
#_rmargin: int
#_tmargin: int
#_bmargin: int
#_effwidth: int
#_effhight: int
#_aspectratio: double
#_effaspectratio: double
#_scale: double
#_screen: pygame.Surface
--
+initPyGame()
+initGUI()
+appendObject(drawobject: drawable)
+clearObjectStack()
+convertWorldCoordinates(objcoord: (double, double), objorigin: (int, int)): (int, int)
+draw()
+update(dt: double)
+setBackgroundColor(color: (int, int, int))
+setScale(scale: double)
+setWidth(width: int)
+setHeight(height: int)
+setWorldWidth(width: double)
+setWorldHeight(height: double)
+setMargin(tmargin: int, rmargin: int, bmargin: int, lmargin: int)
+setRelMargin(tmargin: double, rmargin: double, bmargin: double, lmargin: double)
#_setEffWidth()
#_setEffHeight()
#_setAspectRatio()
#_setEffAspectRatio()
+getBackgroundColor(): (int, int, int)
+getScreen(): pygame.Surface
+getScale(): double
+getWidth(): int
+getHeight(): int
+getWorldWidth(): double
+getWorldHeight(): double
+getMargin(): (int, int, int, int)
+getRelMargin(): (double, double, double, double)
+getEffWidth(): int
+getEffHeight(): int
+getAspectRatio(): double
+getEffAspectRatio(): double

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1080</x>
      <y>170</y>
      <w>1130</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1110.0;10.0;1110.0;50.0;10.0;50.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>640</x>
      <y>110</y>
      <w>100</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>pygame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>100</x>
      <y>130</y>
      <w>60</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0...1
m2=1

</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>20</x>
      <y>110</y>
      <w>180</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>pygame_gui.UIManager</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1010</x>
      <y>70</y>
      <w>1030</w>
      <h>210</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0...*</panel_attributes>
    <additional_attributes>10.0;190.0;10.0;10.0;1010.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2850</x>
      <y>340</y>
      <w>150</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>physics
--
+gravity: double
+friction: double
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2610</x>
      <y>360</y>
      <w>260</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=1..m
&lt; teaches to</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>660</x>
      <y>130</y>
      <w>170</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=1
&lt; teaches to</panel_attributes>
    <additional_attributes>130.0;130.0;130.0;50.0;10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>100</y>
      <w>990</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>970.0;20.0;10.0;20.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2870</x>
      <y>470</y>
      <w>660</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>/num_method/
--
--
/+upate()/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2710</x>
      <y>640</y>
      <w>600</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>Euler
--
--
/+upate(theta: double, omega: double, alpha: double, dt: double) : (double, double)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>3360</x>
      <y>640</y>
      <w>600</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>RungeKutta
--
--
/+upate(theta: double, omega: double, alpha: double, dt: double) : (double, double)/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>3320</x>
      <y>520</y>
      <w>340</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;320.0;70.0;320.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2760</x>
      <y>520</y>
      <w>300</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;60.0;10.0;60.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2610</x>
      <y>470</y>
      <w>280</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>500</y>
      <w>400</w>
      <h>240</h>
    </coordinates>
    <panel_attributes>pensimgui
--
#_stop_button_state: bool
#_sbutton_rect: pygame.Rect
#_stop_button: pygame_gui.elements.UIButton
#_release_button: pygame_gui.elements.UIButton
--
+__init__(world: world)
#_showStopButton()
#_showReleaseButton()
#_setButton()
+getStopButton(): pygame_gui.elements.UIButton
+toggleStopButton(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>390</x>
      <y>310</y>
      <w>220</w>
      <h>50</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
&lt; teaches to </panel_attributes>
    <additional_attributes>200.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>20</y>
      <w>1890</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1870.0;50.0;1870.0;10.0;10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>80</x>
      <y>270</y>
      <w>320</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>/gui/
--
#_guimanager: pygame_gui.UIManager
#_screen: pygame.Surface
#_width: int
#_height: int
--
/+__init__(world: world)/
+processEvents(event: pygame.event)
+update()
+draw()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>440</y>
      <w>30</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
</diagram>
