<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>6</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>36</y>
      <w>360</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>/drawable/
--
#_world: world
--
/+draw()/
/+update()/
+setWorld(world: world)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1290</x>
      <y>150</y>
      <w>360</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>/pendulum/
--
#_length: double[]
#_mass: double[]
#_theta: double[]
#_omega: double[]
#_x: double[]
#_y: double[]
#_gravity: double
#_friction: double
#_mountpoint_width : double
#_mountpoint_height : double
#_mass_radius: double[]
#_forcing_state: bool[]
#_method: num_method
#_objectorigin: (int, int)
--
+__init__(length: double[], mass: double[], theta: double[], omega: double[])
+setNumMethod(num_method: method)
+update(dt: double)
+draw()
+force(fx: double, fy: double, node: int)
+setForcingState(state: bool, node: int)
+getPos(): (int[], int[])
+getRadius(): double[]
+getN(): int
+isForced(node: int): bool
/+eom()/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>864</x>
      <y>540</y>
      <w>360</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>/pendulum1M/
--

--
+eom(theta: double[], omega: double[]): double[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1020</x>
      <y>408</y>
      <w>378</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>610.0;10.0;610.0;50.0;10.0;60.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>96</y>
      <w>18</w>
      <h>66</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1296</x>
      <y>540</y>
      <w>354</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>/pendulum2M/
--

--
+eom(theta: double[], omega: double[]): double[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1728</x>
      <y>540</y>
      <w>354</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>/pendulum3M/
--

--
+eom(theta: double[], omega: double[]): double[]</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1464</x>
      <y>408</y>
      <w>18</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;220.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1548</x>
      <y>408</y>
      <w>366</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;40.0;590.0;40.0;590.0;220.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>432</x>
      <y>156</y>
      <w>372</w>
      <h>498</h>
    </coordinates>
    <panel_attributes>world
--
#__init__()
#_object_stack: drawable[]
#_background_color: (int, int, int)
#_screen: pygame.Surface
#_width: int
#_height: int
#_lmargin: int
#_rmargin: int
#_tmargin: int
#_bmargin: int
#_effwidth: int
#_effhight: int
#_aspectratio: double
#_effaspectratio: double
#_scale: double
#_screen: pygame.Surface
--
+initPyGame()
+initGUI()
+appendObject(drawobject: drawable)
+clearObjectStack()
+convertWorldCoordinates(objcoord: (double, double), objorigin: (int, int)): (int, int)
+draw()
+update(dt: double)
+setBackgroundColor(color: (int, int, int))
+setScale(scale: double)
+setWidth(width: int)
+setHeight(height: int)
+setWorldWidth(width: double)
+setWorldHeight(height: double)
+setMargin(tmargin: int, rmargin: int, bmargin: int, lmargin: int)
+setRelMargin(tmargin: double, rmargin: double, bmargin: double, lmargin: double)
#_setEffWidth()
#_setEffHeight()
#_setAspectRatio()
#_setEffAspectRatio()
+getObjectStack() : drawable[]
+getBackgroundColor(): (int, int, int)
+getScreen(): pygame.Surface
+getScale(): double
+getWidth(): int
+getHeight(): int
+getWorldWidth(): double
+getWorldHeight(): double
+getMargin(): (int, int, int, int)
+getRelMargin(): (double, double, double, double)
+getEffWidth(): int
+getEffHeight(): int
+getAspectRatio(): double
+getEffAspectRatio(): double

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>726</x>
      <y>96</y>
      <w>678</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1110.0;10.0;1110.0;50.0;10.0;50.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>60</y>
      <w>60</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>pygame</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>138</x>
      <y>72</y>
      <w>36</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0...1
m2=1

</panel_attributes>
    <additional_attributes>10.0;140.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>90</x>
      <y>60</y>
      <w>108</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>pygame_gui.UIManager</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>684</x>
      <y>36</y>
      <w>618</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=0...*</panel_attributes>
    <additional_attributes>10.0;200.0;10.0;10.0;1010.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1788</x>
      <y>198</y>
      <w>90</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>physics
--
+gravity: double
+friction: double
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1644</x>
      <y>210</y>
      <w>156</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..n
m2=1..m
&lt; teaches to</panel_attributes>
    <additional_attributes>10.0;20.0;240.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>474</x>
      <y>72</y>
      <w>102</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=-
m1=0..1
m2=1
&lt; teaches to</panel_attributes>
    <additional_attributes>130.0;140.0;130.0;50.0;10.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>708</x>
      <y>54</y>
      <w>594</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>970.0;20.0;10.0;20.0;10.0;170.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1800</x>
      <y>276</y>
      <w>396</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>/num_method/
--
--
/+upate()/

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1704</x>
      <y>378</y>
      <w>318</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>euler
--
--
/+upate(theta: double, omega: double, dt: double) : (double[], double[])/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>2094</x>
      <y>378</y>
      <w>324</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>rk4
--
--
/+upate(theta: double, omega: double, dt: double) : (double[], double[])/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>2070</x>
      <y>306</y>
      <w>204</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0;320.0;70.0;320.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1734</x>
      <y>306</y>
      <w>180</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>280.0;10.0;280.0;60.0;10.0;60.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1644</x>
      <y>270</y>
      <w>168</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>10.0;20.0;260.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>120</x>
      <y>294</y>
      <w>240</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>pensimgui
--
#_stop_button_state: bool
#_sbutton_rect: pygame.Rect
#_stop_button: pygame_gui.elements.UIButton
#_release_button: pygame_gui.elements.UIButton
--
+__init__(world: world)
#_showStopButton()
#_showReleaseButton()
#_setButton()
+getStopButton(): pygame_gui.elements.UIButton
+toggleStopButton(): bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>312</x>
      <y>180</y>
      <w>132</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=-
m1=1
m2=1
&lt; teaches to </panel_attributes>
    <additional_attributes>200.0;30.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>204</x>
      <y>6</y>
      <w>1134</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>1870.0;50.0;1870.0;10.0;10.0;10.0;10.0;250.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>126</x>
      <y>156</y>
      <w>192</w>
      <h>108</h>
    </coordinates>
    <panel_attributes>/gui/
--
#_guimanager: pygame_gui.UIManager
#_screen: pygame.Surface
#_width: int
#_height: int
--
/+__init__(world: world)/
+processEvents(event: pygame.event)
+update()
+draw()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>204</x>
      <y>258</y>
      <w>18</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1644</x>
      <y>288</y>
      <w>168</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>260.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>474</y>
      <w>210</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>/event_handler/
--
#_gui: gui
#_world: world
#_state: game_state
--
/+setGUI()/
/+setWorld()/
/+setGameState()/
/+handleEvents()/
/#_handleQuit()/
/#_handleMouseButtonDown()/
/#_handleMouseButtonUp()/
/#_handleGUIEvents()/


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>84</x>
      <y>198</y>
      <w>60</w>
      <h>312</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>80.0;490.0;10.0;490.0;10.0;10.0;70.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>480</y>
      <w>108</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=1
m2=1
</panel_attributes>
    <additional_attributes>10.0;20.0;160.0;30.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>132</x>
      <y>630</y>
      <w>222</w>
      <h>114</h>
    </coordinates>
    <panel_attributes>pendsim_event_handler
--
--
+__init__(gui: gui, world: world, state: game_state)
+setGUI(gui: gui)
+setWorld(world: world)
+setGameState(state: game_state)
+handleEvents(events: pygame.Eventlist)
#_handleQuit()
#_handleMouseButtonDown(event: pygame.Event)
#_handleMouseButtonUp()
#_handleGUIEvents(event: pygame.Event)


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>234</x>
      <y>600</y>
      <w>18</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;50.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>0</x>
      <y>534</y>
      <w>72</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>game_state
--
+running: bool
+stopped: bool
+forcing: bool</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>66</x>
      <y>558</y>
      <w>78</w>
      <h>18</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
